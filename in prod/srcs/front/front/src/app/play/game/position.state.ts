// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class PositionState {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): PositionState {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsPositionState(bb: flatbuffers.ByteBuffer, obj?: PositionState): PositionState {
    return (obj || new PositionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsPositionState(bb: flatbuffers.ByteBuffer, obj?: PositionState): PositionState {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new PositionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  x(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
  }

  y(): number {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
  }

  static startPositionState(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addX(builder: flatbuffers.Builder, x: number) {
    builder.addFieldFloat32(0, x, 0.0);
  }

  static addY(builder: flatbuffers.Builder, y: number) {
    builder.addFieldFloat32(1, y, 0.0);
  }

  static endPositionState(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static finishPositionStateBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
    builder.finish(offset);
  }

  static finishSizePrefixedPositionStateBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
    builder.finish(offset, undefined, true);
  }

  static createPositionState(builder: flatbuffers.Builder, x: number, y: number): flatbuffers.Offset {
    PositionState.startPositionState(builder);
    PositionState.addX(builder, x);
    PositionState.addY(builder, y);
    return PositionState.endPositionState(builder);
  }
}