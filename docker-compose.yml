version: '3.7'

services:

  my_base:
    build: ./srcs
    image: new_node_base
    container_name: new_node_base

  back:
    build: ./srcs/back
    # user: "1000:1000"
    # command: "sh script.sh"
    image: back
    container_name: back
    networks:
      - ft_transcendence
    restart: on-failure
    volumes:
      - vol_back:/var/www/html/
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - ft_transcendence
  
  front:
    build: ./srcs/front
    # user: "1000:1000"
    # command: "sh script.sh"
    image: front
    container_name: front
    networks:
      - ft_transcendence
    restart: on-failure
    volumes:
      - vol_front:/var/www/html/
    
  # database:
  #   image: postgres
  #   container_name: database
  #   networks:
  #     - ft_transcendence
  #   restart: on-failure
  #   volumes:
  #     - vol_database:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_PASSWORD=evblood123
  #     - POSTGRES_DB=ft_transcendence


  database:
    image: postgres
    container_name: database
    networks:
      - ft_transcendence
    restart: on-failure
    # volumes:
    #   - vol_database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=evblood123
      - POSTGRES_DB=ft_transcendence

networks:
  ft_transcendence:
    driver: bridge

volumes:
  vol_back:
    driver_opts:
      o: bind
      type: 'none'
      device: ${PWD}/Data/back
  vol_front:
    driver_opts:
      type: 'none'
      o: bind
      device: ${PWD}/Data/front
  vol_database:
    driver_opts:
      type: 'none'
      o: bind
      device: ${PWD}/Data/base
