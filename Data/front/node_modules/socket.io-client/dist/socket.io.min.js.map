{"version":3,"file":"socket.io.min.js","sources":["../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed.then(() => this.onClose());\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader.read().then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","length","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","prev","TransportError","reason","description","context","_this","_classCallCheck","_super","Error","Transport","_Emitter","_inherits","_super2","_createSuper","_this2","writable","_assertThisInitialized","query","socket","_createClass","value","_get","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","packet","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","encode","alphabet","map","seed","num","encoded","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","get","poll","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","undefined","_a","_this9","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","binaryFlag","reader","readable","getReader","writer","getWriter","read","_ref","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","TextEncoder","arrayBuffer","encodePacketToBinary","shouldIncludeBinaryHeader","of","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","hasBinary","toJSON","_typeof","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","_len3","_key3","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","hasError","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","f","sent","_len6","_key6","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}